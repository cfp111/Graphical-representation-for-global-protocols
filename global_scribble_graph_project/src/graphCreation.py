'''
Created on 7 aout 12

@author: Charlotte
'''

# This file allows to defined graph specification
# We use different method test(), test2(), etc. for each graph

from ext import extensions

def test (graph):
    start = extensions.Start()
    time = extensions.Delay(0,"t + 2s")
    msg1 = extensions.Message(1,"A","B","Msg1","1s")
    msg2 = extensions.Message(2,"C","B","Msg2","1s")
    msg3 = extensions.Message(3,"C","A","Msg3","1s")
    msg4 = extensions.Message(4,"B","D","Msg4","1s")
    msg5 = extensions.Message(5,"A","C","Msg5","1s")
    msg6 = extensions.Message(11,"A","C","Msg6","1s")
    choice = extensions.Choice(6,"C")
    merge = extensions.Merge(7)
    fork = extensions.Fork(8)
    join = extensions.Join(9)
    rec = extensions.Rec(10,"loop")
    #end = extensions.End()
    graph.add_Snode(start)
    graph.add_Snode(time)
    graph.add_Snode(msg1)
    graph.add_Snode(msg2)
    graph.add_Snode(msg3)
    graph.add_Snode(msg4)
    graph.add_Snode(msg5)
    graph.add_Snode(msg6)
    graph.add_Snode(choice)
    graph.add_Snode(merge)
    graph.add_Snode(fork)
    graph.add_Snode(join)
    #graph.add_Snode(end)
    graph.add_Snode(rec)
    ed0 = extensions.SEdge(start, time)
    ed0b= extensions.SEdge(time, msg1)
    ed1 = extensions.SEdge(msg1, choice)
    ed2 = extensions.SEdge(choice, msg2)
    ed3 = extensions.SEdge(choice, msg3)
    ed4 = extensions.SEdge(msg2, merge)
    ed5 = extensions.SEdge(msg3, merge)
    ed6 = extensions.SEdge(merge, fork)
    ed7 = extensions.SEdge(fork, msg4)
    ed8 = extensions.SEdge(fork, msg5)
    ed9 = extensions.SEdge(msg4, join)
    ed10 = extensions.SEdge(msg5, join)
    ed11 = extensions.SEdge(join, rec)
    ed12 = extensions.SEdge(rec,msg6)
    ed13 = extensions.SEdge(msg6, rec)
    graph.add_Sedge(ed0)
    graph.add_Sedge(ed0b)
    graph.add_Sedge(ed1)
    graph.add_Sedge(ed2)
    graph.add_Sedge(ed3)
    graph.add_Sedge(ed4)
    graph.add_Sedge(ed5)
    graph.add_Sedge(ed6)
    graph.add_Sedge(ed7)
    graph.add_Sedge(ed8)
    graph.add_Sedge(ed9)
    graph.add_Sedge(ed10)
    graph.add_Sedge_with_ports(ed11,'n','s')
    graph.add_Sedge(ed12)
    graph.add_Sedge_with_ports(ed13,'e','s')
    
def test2 (graph):
    start = extensions.Start()
    time = extensions.TimeSlot(0,2,50)
    msg1 = extensions.Message(1,"A","B","Msg1","1s")
    msg2 = extensions.Message(2,"C","B","Msg2","1s")
    msg3 = extensions.Message(3,"C","A","Msg3","1s")
    msg4 = extensions.Message(4,"B","D","Msg4","1s")
    msg5 = extensions.Message(5,"A","C","Msg5","1s")
    choice = extensions.Choice(6,"C")
    rec = extensions.Rec(10,"loop")
    rec2 = extensions.Rec(12,"loop")
    graph.add_Snode(start)
    graph.add_Snode(time)
    graph.add_Snode(msg1)
    graph.add_Snode(msg2)
    graph.add_Snode(msg3)
    graph.add_Snode(msg4)
    graph.add_Snode(msg5)
    graph.add_Snode(choice)
    graph.add_Snode(rec)
    graph.add_Snode(rec2)
    ed0 = extensions.SEdge(start, time)
    ed0b= extensions.SEdge(time, msg1)
    ed1 = extensions.SEdge(msg1, choice)
    ed2 = extensions.SEdge(choice, msg2)
    ed3 = extensions.SEdge(choice, msg3)
    ed4 = extensions.SEdge(msg2, rec)
    ed5 = extensions.SEdge(msg3, rec2)
    ed7 = extensions.SEdge(rec, msg4)
    ed8 = extensions.SEdge(rec2, msg5)
    ed9 = extensions.SEdge(msg4, rec)
    ed10 = extensions.SEdge(msg5, rec2)
    graph.add_Sedge(ed0)
    graph.add_Sedge(ed0b)
    graph.add_Sedge(ed1)
    graph.add_Sedge(ed2)
    graph.add_Sedge(ed3)
    graph.add_Sedge_with_ports(ed4,'n','s')
    graph.add_Sedge_with_ports(ed5,'n','s')
    graph.add_Sedge(ed7)
    graph.add_Sedge(ed8)
    graph.add_Sedge_with_ports(ed9,'e','s')
    graph.add_Sedge_with_ports(ed10,'e','s')
    
def test3 (graph):
    start = extensions.Start()
    msg1 = extensions.Message(1,"A","B","Msg1","1s")
    msg2 = extensions.Message(2,"C","B","Msg2","1s")
    msg3 = extensions.Message(3,"C","A","Msg3","1s")
    msg5 = extensions.Message(5,"A","C","Msg5","1s")
    choice = extensions.Choice(6,"C")
    merge = extensions.Merge(7)
    end = extensions.End()
    rec = extensions.Rec(10,"loop")
    graph.add_Snode(start)
    graph.add_Snode(msg1)
    graph.add_Snode(msg2)
    graph.add_Snode(msg3)
    graph.add_Snode(msg5)
    graph.add_Snode(choice)
    graph.add_Snode(rec)
    graph.add_Snode(end)
    graph.add_Snode(merge)
    ed0 = extensions.SEdge(start, msg1)
    ed1 = extensions.SEdge(msg1, rec)
    ed2 = extensions.SEdge(choice, msg3)
    ed3 = extensions.SEdge(choice, msg2)
    ed5 = extensions.SEdge(msg3, merge)
    ed7 = extensions.SEdge(rec, choice)
    ed8 = extensions.SEdge(choice, msg5)
    ed9 = extensions.SEdge(msg2, rec)
    ed10 = extensions.SEdge(msg5, merge)
    ed0b = extensions.SEdge(merge, end)
    graph.add_Sedge(ed0)
    graph.add_Sedge(ed0b)
    graph.add_Sedge(ed7)
    graph.add_Sedge(ed2)
    graph.add_Sedge(ed3)
    graph.add_Sedge_with_ports(ed1,'n','s')
    graph.add_Sedge(ed5)
    graph.add_Sedge(ed8)
    graph.add_Sedge_with_ports(ed9,'e','s')
    graph.add_Sedge(ed10)

def test4(graph):
    start = extensions.Start()
    msg = extensions.Message(1,"U","A","PollMode < InstrumentId, int >","2s")
    end = extensions.End()
    graph.add_Snode(start)
    graph.add_Snode(msg)
    graph.add_Snode(end)
    ed = extensions.SEdge(start,msg)
    ed2 = extensions.SEdge(msg,end)
    graph.add_Sedge(ed)
    graph.add_Sedge(ed2)
    
def test5(graph):
    start = extensions.Start()
    msg = extensions.Message(1,"U","A","PushMode < InstrumentId >","2s")
    msg2 = extensions.Message(2,"A","I","PushMode","1s")
    choice = extensions.Choice(5,"I")
    msg3 = extensions.Message(3,"I","A","Supported","1s")
    msg4 = extensions.Message(4,"I","A","NotSupported","1s")
    merge = extensions.Merge(6)
    end = extensions.End()
    graph.add_Snode(start)
    graph.add_Snode(msg)
    graph.add_Snode(msg2)
    graph.add_Snode(choice)
    graph.add_Snode(msg3)
    graph.add_Snode(msg4)
    graph.add_Snode(merge)
    graph.add_Snode(end)
    ed = extensions.SEdge(start,msg)
    ed3 = extensions.SEdge(msg,msg2)
    ed4 = extensions.SEdge(msg2,choice)
    ed5 = extensions.SEdge(choice,msg3)
    ed6 = extensions.SEdge(choice,msg4)
    ed7 = extensions.SEdge(msg3,merge)
    ed8 = extensions.SEdge(msg4,merge)
    ed2 = extensions.SEdge(merge,end)
    graph.add_Sedge(ed)
    graph.add_Sedge(ed3)
    graph.add_Sedge(ed4)
    graph.add_Sedge(ed5)
    graph.add_Sedge(ed6)
    graph.add_Sedge(ed7)
    graph.add_Sedge(ed8)
    graph.add_Sedge(ed2)

def test6(graph):
    start = extensions.Start()
    msg = extensions.Message(1,"I","A","NotSupported","1s")
    msg2 = extensions.Message(2,"A","I","ConfigPush","1s")
    fork = extensions.Fork(5)
    msg3 = extensions.Message(3,"I","A","Raw < Data >","1s")
    msg4 = extensions.Message(4,"A","U","Formatted < Data >","2s")
    join = extensions.Join(6)
    end = extensions.End()
    graph.add_Snode(start)
    graph.add_Snode(msg)
    graph.add_Snode(msg2)
    graph.add_Snode(fork)
    graph.add_Snode(msg3)
    graph.add_Snode(msg4)
    graph.add_Snode(join)
    graph.add_Snode(end)
    ed = extensions.SEdge(start,msg)
    ed3 = extensions.SEdge(msg,fork)
    ed4 = extensions.SEdge(fork,msg2)
    ed5 = extensions.SEdge(msg2,msg3)
    ed6 = extensions.SEdge(fork,msg4)
    ed7 = extensions.SEdge(msg3,join)
    ed8 = extensions.SEdge(msg4,join)
    ed2 = extensions.SEdge(join,end)
    graph.add_Sedge(ed)
    graph.add_Sedge(ed3)
    graph.add_Sedge(ed4)
    graph.add_Sedge(ed5)
    graph.add_Sedge(ed6)
    graph.add_Sedge(ed7)
    graph.add_Sedge(ed8)
    graph.add_Sedge(ed2)
    
def test7(graph):
    start = extensions.Start()
    msg = extensions.Message(1,"I","A","Raw < Data >","1s")
    msg2 = extensions.Message(2,"A","U","Formatted < Data >","2s")
    rec = extensions.Rec(3,"PUSH")
    graph.add_Snode(start)
    graph.add_Snode(msg)
    graph.add_Snode(msg2)
    graph.add_Snode(rec)
    ed = extensions.SEdge(start,rec)
    ed3 = extensions.SEdge(rec,msg)
    ed4 = extensions.SEdge(msg,msg2)
    ed2 = extensions.SEdge(msg2,rec)
    graph.add_Sedge(ed3)
    graph.add_Sedge_with_ports(ed,'n','s')
    graph.add_Sedge(ed4)
    graph.add_Sedge_with_ports(ed2,'e','s')
    
def test8(graph):
    start = extensions.Start()
    msg = extensions.Message(1,"I","A","NotSupported","1s")
    delay = extensions.Delay(3,"t+3s")
    msg2 = extensions.Message(2,"A","I","ConfigPush","1s")
    end = extensions.End()
    graph.add_Snode(start)
    graph.add_Snode(msg)
    graph.add_Snode(delay)
    graph.add_Snode(msg2)
    graph.add_Snode(end)
    ed = extensions.SEdge(start,msg)
    ed3 = extensions.SEdge(msg,delay)
    ed4 = extensions.SEdge(delay,msg2)
    ed2 = extensions.SEdge(msg2,end)
    graph.add_Sedge(ed)
    graph.add_Sedge(ed3)
    graph.add_Sedge(ed4)
    graph.add_Sedge(ed2)
    
def test9(graph):
    start = extensions.Start()
    inter = extensions.Interrupt(0, "by A with stop")
    msg = extensions.Message(1,"U","A","PollMode<InstrumentId,int>","2s")
    rec = extensions.Rec(2, "Loop")
    graph.add_Snode(start)
    graph.add_Snode(msg)
    graph.add_Snode(inter)
    graph.add_Snode(rec)
    ed = extensions.SEdge(start,inter)
    ed3 = extensions.SEdge(inter,rec)
    ed4 = extensions.SEdge(rec,msg)
    ed2 = extensions.SEdge(msg,rec)
    graph.add_Sedge(ed)
    graph.add_Sedge_with_ports(ed3,'n','s')
    graph.add_Sedge(ed4)
    graph.add_Sedge_with_ports(ed2,'e','s')
    